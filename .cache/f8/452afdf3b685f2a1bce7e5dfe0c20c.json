{"id":"js/app.js","dependencies":[{"name":"/Users/andrii/Documents/HTML-sites/sands/weather/weather_project/package.json","includedInParent":true,"mtime":1613303303429}],"generated":{"js":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar submit = document.querySelector(\".search__form\");\nvar inputForm = document.querySelector(\".search__input\");\nvar city = document.querySelector(\".location__city\");\nvar infoBlock = document.querySelector(\".result-block\");\nvar currTemp = document.querySelector(\".temp__temperature\");\nvar currDesc = document.querySelector(\".temp__desc\");\nvar wind = document.querySelector(\".wind__result\");\nvar humidity = document.querySelector(\".hum__result\");\nvar pressure = document.querySelector(\".prec__result\");\nvar locDate = document.querySelector(\".location__date\");\nvar locDay = document.querySelector(\".location__day\");\nvar load = document.querySelector(\".load\");\nvar cantFind = document.querySelector(\".cant-find\");\nvar elOfList = document.querySelector(\".week-list\");\nvar temperature = \"°C\";\nvar units = \"standard\";\nvar templateDay = \"<li class=\\\"day-block\\\">\\n                        <span class=\\\"day__name\\\"></span>\\n                        <span class=\\\"day__temp\\\"></span>\\n                    </li>\";\nvar objData = {};\nvar dayArr = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nvar dayShortArr = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nvar APIkey = \"d9dd885fb445dbae5ec582c99cabc4f2\";\nsubmit.addEventListener(\"submit\", function (event) {\n  event.preventDefault();\n  var input = inputForm.value.trim();\n\n  if (input.length > 2) {\n    var cityName = tuUpper(input);\n    submit.reset();\n    sendInput(cityName);\n    infoBlock.classList = \"result-block\";\n    load.classList = \"load load_show\";\n    elOfList.innerHTML = \"\";\n  } else {\n    console.log(\"enter somthhing\");\n  }\n});\n\nfunction sendInput(city) {\n  fetch(\"../data/city.list.json\").then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    var _iterator = _createForOfIteratorHelper(data),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var iterator = _step.value;\n\n        if (iterator.name == city) {\n          //   console.log(iterator);\n          changeUnits(iterator.country);\n          getTemp(iterator.coord.lat, iterator.coord.lon, iterator.country.toLowerCase());\n          renderDate(iterator);\n          break;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }).catch(function (err) {\n    console.log(\"Error 404\");\n  });\n}\n\nfunction getTemp(_x, _x2, _x3) {\n  return _getTemp.apply(this, arguments);\n}\n\nfunction _getTemp() {\n  _getTemp = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(lat, lon, lang) {\n    var res, data;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\".concat(lat, \"&lon=\").concat(lon, \"&units=\").concat(units, \"&lang=\").concat(lang, \"&appid=\").concat(APIkey));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context.sent;\n            load.classList = \"load\";\n            infoBlock.classList = \"result-block_show\";\n            objData = data;\n            renderTemp(data);\n            renderTempDays(data); // console.log(data);\n\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0, \"404 Error\");\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 14]]);\n  }));\n  return _getTemp.apply(this, arguments);\n}\n\nfunction changeUnits(country) {\n  if (country === \"BS\" || country === \"BZ\" || country === \"KY\" || country === \"PW\" || country === \"US\" || country === \"LR\") {\n    units = \"imperial\";\n    temperature = \"°F\";\n  } else {\n    units = \"metric\";\n    temperature = \"°C\";\n  }\n}\n\nfunction renderDate(data) {\n  city.textContent = \"\".concat(data.name, \", \").concat(data.country);\n}\n\nfunction renderTemp(data) {\n  currTemp.textContent = \"\".concat(Math.round(data.current.temp)).concat(temperature);\n  currDesc.textContent = data.current.weather[0].description;\n  locDay.textContent = dayArr[getNumOfDay(data.current.dt)];\n  locDate.textContent = gettDate(data.current.dt);\n}\n\nfunction gettDate(num) {\n  var date = new Date(+(num + \"000\"));\n  return date.toLocaleDateString();\n}\n\nfunction tuUpper(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nfunction renderTempDays(data) {\n  data.daily.forEach(function (element, indx) {\n    if (indx < 5) {\n      var day = new Date().getTime();\n      day += 24 * 60 * 60 * 1000 * indx;\n      var dayInfo = dayShortArr[new Date(day).getDay()];\n      createDay(dayInfo, Math.round(element.temp.min), indx);\n      document.querySelectorAll(\".day-block\").forEach(function (e) {\n        return e.addEventListener(\"click\", setDatas);\n      });\n    }\n  });\n}\n\nfunction createDay(day, temp, indx) {\n  elOfList.insertAdjacentHTML(\"afterbegin\", templateDay);\n  var newCard = elOfList.firstElementChild;\n  newCard.querySelector(\".day__name\").parentNode.dataset.day = indx;\n  newCard.querySelector(\".day__name\").textContent = day;\n  newCard.querySelector(\".day__temp\").textContent = temp + temperature;\n  return newCard;\n}\n\nfunction getNumOfDay(num) {\n  var date = new Date(+(num + \"000\"));\n  return date.getDay();\n}\n\nfunction setDatas(event) {\n  var target = event.target;\n\n  if (event.target.className == \"day__name\" || event.target.classList == \"day__temp\") {\n    target = event.target.parentNode;\n  }\n\n  var listsOfdays = document.querySelectorAll(\".day-block\");\n  listsOfdays.forEach(function (e) {\n    return e.classList.remove(\"day-block_active\");\n  });\n  target.classList.add(\"day-block_active\");\n  var numDay = target.getAttribute(\"data-day\");\n  currTemp.textContent = Math.round(objData.daily[numDay].temp.min) + temperature;\n  currDesc.textContent = objData.daily[numDay].weather[0].description;\n  locDay.textContent = dayArr[getNumOfDay(objData.daily[numDay].dt)];\n  locDate.textContent = gettDate(objData.daily[numDay].dt);\n  wind.textContent = Math.round(objData.daily[numDay].wind_speed) + \" km/h\";\n  humidity.textContent = objData.daily[numDay].humidity + \" %\";\n  pressure.textContent = objData.daily[numDay].pressure + \" %\";\n}"},"sourceMaps":null,"error":null,"hash":"377a3c0569f0b93f5328f211a7f98926","cacheData":{"env":{}}}